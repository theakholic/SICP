#lang racket

;; Miller Rabin


(define (exp-mod b e m) ; calculate curr*b^e mod m
  (cond ((= e 0) 1)
        ((even? e)
         (let (x (exp-mod b (e/2) m)))
         (cond ((and (= (remainder (sqr x) m) 1) (not (or (= (remainder x m) 1) (= (remainder x m) (- m 1))))) 0)
               (remainder (sqr x) m)))
        (else (remainder (* b (exp-mod b (- e 1) m)) m))))